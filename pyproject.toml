[tool.poetry]
name = "salt_nornir"
version = "0.20.5"
description = "Salt-Nornir Proxy Minion SaltStack Modules"
authors = ["Denis Mulyalin <d.mulyalin@gmail.com>"]
maintainers = ["Denis Mulyalin <d.mulyalin@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/dmulyalin/salt-nornir"
repository = "https://github.com/dmulyalin/salt-nornir"
documentation = "https://salt-nornir.readthedocs.io/"
keywords = ["Nornir", "SaltStack", "salt-extension"]
classifiers = [
    "Topic :: Utilities",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
]

[tool.poetry.dependencies]
# mandatory dependencies
python = ">=3.7,<4.0"
nornir = "3.3.0"
pydantic = ">=1.10.2,<=2.3.0"
nornir_salt = "0.20.*"
psutil = ">=5.8.*,<6.*"

# optional dependencies for extras definition
cerberus = { version = "1.3.4", optional = true }
genie = { version = "23.7", markers = "sys_platform != 'win32'", optional = true, extras = ['full'] }
jmespath = { version = "1.0.1", optional = true }
napalm = { version = "4.1.0", optional = true }
ncclient = { version = "0.6.13", optional = true }
netmiko = { version = "4.1.2", optional = true }
nornir-napalm = { version = "0.4.0", optional = true }
nornir-netmiko = { version = "1.0.0", optional = true }
nornir-scrapli = { version = "2023.7.30", optional = true }
ntc-templates = { version = "^3.0.0", optional = true }
paramiko = { version = "2.12.0", optional = true }
pyats = { version = "23.7", markers = "sys_platform != 'win32'", optional = true, extras = ['full'] }
pygnmi = { version = "0.8.12", optional = true }
pynetbox = { version = "7.0.1", optional = true }
pyyaml = { version = "6.0.1", optional = true }
puresnmp = { version = "2.0.0", optional = true, extras = ['crypto'] }
requests = { version = "2.25.1", optional = true }
scrapli = { version = "2023.7.30", optional = true }
scrapli-community = { version = "2023.7.30", optional = true }
scrapli-netconf = { version = "2023.7.30", optional = true }
tabulate = { version = "0.9.0", optional = true }
ttp = { version = "0.9.*", optional = true }
ttp-templates = { version = "0.3.*", optional = true }
xmltodict = { version = "0.13.0", optional = true }
lxml = { version = "4.9.3", optional = true }
textfsm = { version = "1.1.2", optional = true }
jinja2 = { version = "3.1.2", optional = true }
rich = { version = "13.5.2", optional = true }
N2G = { version = "0.3.*", optional = true }
robotframework = { version = "6.1.1", optional = true }
dnspython = { version = "2.4.2", optional = true, python = ">=3.8,<4.0"}
diskcache = { version = "5.6.1", optional = true }
pythonping = { version = "1.1.4", optional = true }
picle = { version = "0.2.*", optional = true }

# docs dependencies for extras definition
readthedocs-sphinx-search = { version = "0.1.1", optional = true }
Sphinx = { version = "4.3.0", optional = true }
sphinx_rtd_theme = { version = "1.0.0", optional = true }
sphinxcontrib-applehelp = { version = "1.0.1", optional = true }
sphinxcontrib-devhelp = { version = "1.0.1", optional = true }
sphinxcontrib-htmlhelp = { version = "2.0.0", optional = true }
sphinxcontrib-jsmath = { version = "1.0.1", optional = true }
sphinxcontrib-napoleon = { version = "0.7", optional = true }
sphinxcontrib-qthelp = { version = "1.0.2", optional = true }
sphinxcontrib-serializinghtml = { version = "1.1.5", optional = true }
sphinxcontrib-spelling = { version = "7.2.1", optional = true }

[tool.poetry.dev-dependencies]
bandit = "1.7.*"
black = "22.3.*"
flake8 = "4.0.*"
pre-commit = "2.15.*"
pyenchant = "3.2.*"
pylint = "2.12.*"
pytest = { version = ">=7.1", markers = "python_version >= '3.7'" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
prodminmaster = [
    "rich",
    "tabulate"
]
prodmaxmaster = [
    "pynetbox",
    "rich",
    "tabulate",
    "ttp",
    "ttp-templates",
    "N2G",
    "robotframework",
    "diskcache",
	"picle"
]
prodminminion = [
    "ncclient",
    "netmiko",
    "nornir-netmiko",
    "paramiko",
    "requests",
    "tabulate",
    "ttp",
    "ttp-templates",
    "xmltodict",
    "jinja2",
    "textfsm"
]
prodmaxminion = [
    "cerberus",
    "genie",
    "jmespath",
    "napalm",
    "ncclient",
    "netmiko",
    "nornir-napalm",
    "nornir-netmiko",
    "nornir-scrapli",
    "ntc-templates",
    "paramiko",
    "pyats",
    "pygnmi",
    "pynetbox",
    "pyyaml",
    "puresnmp",
    "requests",
    "scrapli",
    "scrapli-community",
    "scrapli-netconf",
    "tabulate",
    "ttp",
    "ttp-templates",
    "xmltodict",
    "jinja2",
    "textfsm",
	"dnspython",
    "diskcache",
    "pythonping"
]
docs = [
    "readthedocs-sphinx-search",
    "Sphinx",
    "sphinx_rtd_theme",
    "sphinxcontrib-applehelp",
    "sphinxcontrib-devhelp",
    "sphinxcontrib-htmlhelp",
    "sphinxcontrib-jsmath",
    "sphinxcontrib-napoleon",
    "sphinxcontrib-qthelp",
    "sphinxcontrib-serializinghtml",
    "sphinxcontrib-spelling",
]
netmiko = [
    "netmiko",
    "nornir-netmiko"
]
napalm = [
    "napalm",
    "nornir-napalm"
]
scrapli = [
    "scrapli",
    "scrapli-community",
]
pyats = [
    "genie",
    "pyats"
]
netconf = [
    "ncclient",
    "scrapli-netconf",
]
gnmi = [
    "pygnmi"
]
restconf = [
    "requests"
]
dataprocessor = [
    "cerberus",
    "jmespath",
    "ntc-templates",
    "pyyaml",
    "tabulate",
    "ttp",
    "ttp-templates",
    "xmltodict",
    "lxml"
]
netbox = [
    "pynetbox",
    "diskcache"
]
robot = [
    "robot"
]

[tool.poetry.plugins."salt.loader"]
"module_dirs" = "salt_nornir.loader:module_dirs"
"proxy_dirs" = "salt_nornir.loader:proxy_dirs"
"states_dirs" = "salt_nornir.loader:states_dirs"
"runner_dirs" = "salt_nornir.loader:runner_dirs"
"pillar_dirs" = "salt_nornir.loader:pillar_dirs"
